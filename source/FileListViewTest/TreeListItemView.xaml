<UserControl x:Class="FileListViewTest.TreeListItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 

             xmlns:folders="clr-namespace:FolderControlsLib.Views;assembly=FolderControlsLib"
             xmlns:filter="clr-namespace:FilterControlsLib.Views;assembly=FilterControlsLib"
             xmlns:fvbehav="clr-namespace:FileListView.Views.Behavior;assembly=FileListView"
             xmlns:fvloc="clr-namespace:FileSystemModels.Local;assembly=FileSystemModels"
             xmlns:fbviews="clr-namespace:FolderBrowser.Views;assembly=FolderBrowser"
             xmlns:ctrls="clr-namespace:DropDownButtonLib.Controls;assembly=DropDownButtonLib"
             xmlns:bindLocal="clr-namespace:FileListView.Views;assembly=FileListView"
             xmlns:dbthemes="clr-namespace:DropDownButtonLib.Themes;assembly=DropDownButtonLib"

             xmlns:EditInPlace="clr-namespace:InplaceEditBoxLib.Views;assembly=InplaceEditBoxLib"
             xmlns:view ="clr-namespace:UserNotification.View;assembly=UserNotification"
             xmlns:conv="clr-namespace:FolderBrowser.Converters;assembly=FolderBrowser"

             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400">
    <Grid Grid.Column="0">
        <Grid.Resources>
            <conv:InverseBooleanConverter x:Key="inverter" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

            <folders:FolderComboBox DataContext="{Binding FolderTextPath}" Name="PathTextInput"
                                    ItemsSource="{Binding CurrentItems, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    SelectedItem="{Binding SelectedItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    
                                    Text="{Binding CurrentFolder, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTip="{Binding CurrentFolderToolTip, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTipService.IsEnabled="True"
                                    
                                    fvbehav:SelectionChangedCommand.ChangedCommand="{Binding SelectionChanged}"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Stretch"
                                    Grid.Column="0" Margin="3"
             />

            <ctrls:SplitItemsButton ToolTip="{x:Static fvloc:Strings.RefreshCommand_TT}"
                                    ItemsSource="{Binding RecentFolders.DropDownItems}"
                                    Command="{Binding RefreshCommand}"
                                    CommandParameter="{Binding ElementName=PathTextInput, Path=Text}"
                                    IsOpen="{Binding RecentFolders.IsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    DropDownMaxHeight="300"
                                    HorizontalAlignment="Left"
                                    Grid.Column="1" Margin="0,0,3,0"
                                >
            <ctrls:SplitItemsButton.Content>
               <Image Source="{DynamicResource FLV_Image_Refresh}" Width="16" Margin="3,0"/>
            </ctrls:SplitItemsButton.Content>
            <ctrls:DropDownItemsButton.Resources>
                <!-- Use a proxy to bind items to root object of this collection -->
                    <bindLocal:BindingProxy x:Key="DropDownItemsButtonProxy" Data="{Binding RecentFolders}" />
            </ctrls:DropDownItemsButton.Resources>
            <ctrls:DropDownItemsButton.ItemTemplate>
                <DataTemplate>
                    <Grid Name="MyBorder" Margin="0" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Button Content="-" Grid.Column="0"
                                            ToolTip="Remove Folder Bookmark"
                                            Command="{Binding Path=Data.RemoveFolderBookmark, Source={StaticResource DropDownItemsButtonProxy}}"
                                            CommandParameter="{Binding}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch" Margin="0" Padding="3,0"
                                            MinWidth="16" MinHeight="16"
                                            x:Name="RemoveFolderBookmarkButton"
                                            />

                        <Button Content="{Binding DisplayName}"
                                Command="{Binding Path=Data.ChangeOfDirectoryCommand, Source={StaticResource DropDownItemsButtonProxy}}"
                                CommandParameter="{Binding}"
                                Grid.Column="1"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Left"
                                BorderBrush="Transparent"
                                ToolTip="{Binding Path=FullPath}"
                                Margin="3,0,0,0"
                               >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Padding="3,0"
                                                        >
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                      />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static dbthemes:ResourceKeys.ButtonMouseOverBackgroundKey}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=MyBorder, Path=IsMouseOver}" Value="True" >
                            <Setter TargetName="RemoveFolderBookmarkButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=MyBorder, Path=IsMouseOver}" Value="False" >
                            <Setter TargetName="RemoveFolderBookmarkButton" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ctrls:DropDownItemsButton.ItemTemplate>
        </ctrls:SplitItemsButton>
        </Grid>

        <Grid Grid.Row="1" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ToolBarTray Grid.Row="1" Grid.Column="0" SnapsToDevicePixels="True" Background="Transparent">
                <ToolBar  VerticalAlignment="Stretch" ToolBarTray.IsLocked="True"
                          SnapsToDevicePixels="True" Background="Transparent">

                    <Button DataContext="{Binding FolderItemsView}"
                            Command="{Binding NavigateBackCommand}"
                            ToolTip="{x:Static fvloc:Strings.NavigateBackCommand_TT}"
                            ToolTipService.ShowOnDisabled="True"
                            Grid.Column="0" Margin="1"
                            BorderThickness="0"
                            HorizontalAlignment="Left" MinHeight="16" MinWidth="16">
                        <Image Source="{DynamicResource FLV_Image_Back}" Width="16" Margin="3,0" />
                    </Button>
                    <Button DataContext="{Binding FolderItemsView}"
                            Command="{Binding NavigateForwardCommand}"
                            ToolTip="{x:Static fvloc:Strings.NavigateForwardCommand_TT}"
                            ToolTipService.ShowOnDisabled="True"
                            Grid.Column="1" Margin="1"
                            BorderThickness="0" HorizontalAlignment="Left" MinHeight="16" MinWidth="16">
                        <Image Source="{DynamicResource FLV_Image_Forward}" Width="16" Margin="3,0" />
                    </Button>
                    <Button DataContext="{Binding FolderItemsView}"
                            Command="{Binding NavigateUpCommand}"
                            ToolTip="{x:Static fvloc:Strings.NavigateUpCommand_TT}"
                            ToolTipService.ShowOnDisabled="True"
                            Grid.Column="2" Margin="1"
                            BorderThickness="0" HorizontalAlignment="Left" MinHeight="16" MinWidth="16">
                        <Image Source="{DynamicResource FLV_Image_FolderUp}" Width="16" Margin="3,0" />
                    </Button>

                    <Separator Margin="9,3" SnapsToDevicePixels="True" />

                    <ToggleButton DataContext="{Binding FolderItemsView}"
                          Command="{Binding ToggleIsFolderVisibleCommand}"
                          IsChecked="{Binding ShowFolders, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="{x:Static fvloc:Strings.CMD_ToggleIsFolderVisibleCommand_TT}"
                          ToolTipService.ShowOnDisabled="True"
                          Grid.Column="4" Margin="1"
                          BorderThickness="0" HorizontalAlignment="Left" MinHeight="16" MinWidth="16">
                        <Image Source="{DynamicResource FLV_Image_IsFoldersVisible}" Width="16" Margin="3,0" />
                    </ToggleButton>
                    <ToggleButton DataContext="{Binding FolderItemsView}"
                          Command="{Binding ToggleIsIconVisibleCommand}"
                          IsChecked="{Binding ShowIcons, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="{x:Static fvloc:Strings.CMD_ToggleIsIconVisibleCommand_TT}"
                          ToolTipService.ShowOnDisabled="True"
                          Grid.Column="5" Margin="1"
                          BorderThickness="0" HorizontalAlignment="Left" MinHeight="16" MinWidth="16">
                        <Image Source="{DynamicResource FLV_Image_IsIconVisible}" Width="16" Margin="3,0" />
                    </ToggleButton>
                    <ToggleButton DataContext="{Binding FolderItemsView}"
                          Command="{Binding ToggleIsHiddenVisibleCommand}"
                          IsChecked="{Binding ShowHidden, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="{x:Static fvloc:Strings.ToggleIsHiddenVisibleCommand_TT}"
                          ToolTipService.ShowOnDisabled="True"
                          Grid.Column="6" Margin="1"
                          BorderThickness="0" HorizontalAlignment="Left" MinHeight="16" MinWidth="16">
                        <Image Source="{DynamicResource FLV_Image_IsHiddenFileVisible}" Width="16" Margin="3,0" />
                    </ToggleButton>
                </ToolBar>
            </ToolBarTray>

            <filter:FilterComboBox ItemsSource="{Binding Filters.CurrentItems}"
                                   SelectedItem="{Binding Filters.SelectedItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   
                                   Text="{Binding Filters.CurrentFilter, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   ToolTip="{Binding Filters.CurrentFilterToolTip, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   ToolTipService.IsEnabled="True"
                                   
                                   fvbehav:SelectionChangedCommand.ChangedCommand="{Binding Filters.SelectionChanged}"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Stretch"
                                   Grid.Column="1"
                                   Margin="3"
                                   TextSearch.TextPath="FilterText"
                                   IsEnabled="{Binding FolderItemsView.IsFiltered, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          >
            </filter:FilterComboBox>

            <ToggleButton DataContext="{Binding FolderItemsView}"
                    Command="{Binding ToggleIsFilteredCommand}"
                    IsChecked="{Binding IsFiltered, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                    ToolTip="{x:Static fvloc:Strings.ToggleIsFilteredCommand_TT}"
                    ToolTipService.ShowOnDisabled="True"
                    Grid.Column="2"
                    Margin="1"
                    Padding="3"
                    HorizontalAlignment="Right" VerticalAlignment="Stretch"
                    BorderThickness="0" MinHeight="16" MinWidth="16">
                <Image Source="{DynamicResource FLV_Image_IsFiltered}" Width="16" Margin="1,0" />
            </ToggleButton>
        </Grid>

        <fbviews:BrowseDirectoriesView DataContext="{Binding Path=TreeBrowser,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                       Grid.Column="0"
                                       Margin="3" Grid.Row="2" />
        
        <!-- List files and folders here -->
        <view:NotifyableContentControl DataContext="{Binding FolderItemsView}"
                                       Notification="{Binding Notification}"
                                       Grid.Row="3" Margin="3">

            <ListBox xmlns:bindLocal="clr-namespace:FileListView.Views;assembly=FileListView"
                     ItemsSource="{Binding CurrentItems}"
                     SelectedItem="{Binding SelectedItem}"
  
                     fvbehav:DoubleClickSelectorItem.DoubleClickItemCommand="{Binding Path=NavigateDownCommand}"
                     fvbehav:BringIntoViewListBoxItem.ScrollSelectedIntoView="True"
               
                     ScrollViewer.CanContentScroll="True"
                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                   >
                <ListBox.Resources>
                    <BooleanToVisibilityConverter x:Key="boolToVis" />
                    <bindLocal:BindingProxy  x:Key="DataContextProxy"  Data="{Binding}" />

                </ListBox.Resources>
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding NavigateDownCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                  Header="{x:Static fvloc:Strings.CMD_Open_in_Application_Label}"
                                  ToolTip="{x:Static fvloc:Strings.CMD_Open_in_Application_Label_TT}"
                    />

                        <MenuItem Command="{Binding OpenContainingFolderCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                  Header="{x:Static fvloc:Strings.CMD_Open_in_Windows_Label}"
                                  ToolTip="{x:Static fvloc:Strings.CMD_Open_in_Windows_Label_TT}"
                                  />

                        <MenuItem Command="{Binding OpenInWindowsCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                  Header="{x:Static fvloc:Strings.CMD_Open_with_Windows_Association_Label}"
                                  ToolTip="{x:Static fvloc:Strings.CMD_Open_with_Windows_Association_Label_TT}"
                                  />

                        <MenuItem Command="{Binding CopyPathCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                  Header="{x:Static fvloc:Strings.CMD_Copy_Path_To_Clipboard_Label}"
                                  ToolTip="{x:Static fvloc:Strings.CMD_Copy_Path_To_Clipboard_Label_TT}"
                                  />

                        <Separator />

                        <MenuItem Command="{Binding BookmarkFolder.RecentFolderAddCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                  Header="{x:Static fvloc:Strings.CMD_RecentFolderAdd_Label}"
                                  ToolTip="{x:Static fvloc:Strings.CMD_RecentFolderAdd_TT}"
                                  />

                        <MenuItem Command="{Binding BookmarkFolder.RecentFolderRemoveCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                  Header="{x:Static fvloc:Strings.CMD_RecentFolderRemove_Label}"
                                  ToolTip="{x:Static fvloc:Strings.CMD_RecentFolderRemove_TT}"
                                  />
                        <Separator />

                        <MenuItem Command="{Binding Path=Data.CreateFolderCommand, Source={StaticResource DataContextProxy}}"
                                  CommandParameter="{Binding Path=Data.CurrentFolder, Source={StaticResource DataContextProxy}}"
                                  Header="{x:Static fvloc:Strings.STR_NewFolder_Command}"
                                  ToolTip="{x:Static fvloc:Strings.STR_NewFolder_Command_TT}"
                                  />

                        <MenuItem Command="{Binding Path=Data.StartRenameCommand, Source={StaticResource DataContextProxy}}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                  Header="{x:Static fvloc:Strings.STR_Rename_Command}"
                                  ToolTip="{x:Static fvloc:Strings.STR_Rename_Command_TT}"
                               />
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Image Visibility="{Binding Path=Data.ShowIcons,Mode=OneWay,UpdateSourceTrigger=PropertyChanged, Source={StaticResource DataContextProxy}, Converter={StaticResource boolToVis}}"
                                   Margin="3,0"
                                   Source="{Binding Path=DisplayIcon}"
                                   SnapsToDevicePixels="True" 
                                   Grid.Column="0"
                                   Width="16" Height="16" 
                                  >
                                <Image.InputBindings>
                                    <MouseBinding MouseAction="LeftDoubleClick"
                                                  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}, Path=DataContext.NavigateDownCommand}"
                                                  CommandParameter="{Binding .}"/>
                                </Image.InputBindings>
                            </Image>

                            <EditInPlace:EditBox Grid.Column="1"
                                                 Text="{Binding DisplayName}"
                                                 DisplayText="{Binding DisplayName}"
                                                 RenameCommand="{Binding Path=Data.RenameCommand, Source={StaticResource DataContextProxy}}"
                                                 ToolTipService.ShowOnDisabled="True"
                                                 
                                                 InvalidInputCharacters="{x:Static fvloc:Strings.ForbiddenRenameKeys}"
                                                 InvalidInputCharactersErrorMessage="{x:Static fvloc:Strings.ForbiddenRenameKeysMessage}"
                                                 InvalidInputCharactersErrorMessageTitle="{x:Static fvloc:Strings.ForbiddenRenameKeysTitle}"
                
                                                 IsEditableOnDoubleClick ="False"
                              />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </view:NotifyableContentControl>
    </Grid>
</UserControl>
