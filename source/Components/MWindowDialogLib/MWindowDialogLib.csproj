<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

  <PropertyGroup>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>1.3.0.1</Version>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <FileVersion>1.3.0.0</FileVersion>
    <Company>Open Source</Company>
    <Product>Dirkster.MWindowDialogLib</Product>
    <Copyright>2016-2020</Copyright>
    <Description>Part of MLib, which is a set of WPF theming libraries based on MahApps.Metro and MUI</Description>
    <PackageProjectUrl>https://github.com/Dirkster99/MLib</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Dirkster99/MLib</RepositoryUrl>
    <PackageId>Dirkster.MWindowDialogLib</PackageId>
    <Authors>https://github.com/Dirkster99/MLib</Authors>

    <TargetFrameworks>net452;netcoreapp3.0</TargetFrameworks>
    <UseWPF>true</UseWPF>

    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>AppFlyout_64x.png</PackageIcon>
    <PackageTags>custom wpf control c# .net metro modern black dark light theme control library</PackageTags>
    <PackageReleaseNotes>Mutlitargetting NetCore 3 and Net 4</PackageReleaseNotes>
    <!--
    NuGet packages with dependent local libraries are currently not (very well) supported as discussed here:
    https://stackoverflow.com/questions/44976879/msbuild-multiple-dll-in-a-single-nuget-package
    
    Current workaround: Use seperate NuGet.exe with *.nuspec file to build and deploy this package
    -->

  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\MWindowInterfacesLib\MWindowInterfacesLib.csproj" />
    <ProjectReference Include="..\MWindowLib\MWindowLib.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Include="images/AppFlyout_64x.png" Pack="true" PackagePath=""/>
  </ItemGroup>

</Project>
